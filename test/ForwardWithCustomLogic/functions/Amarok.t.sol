// SPDX-License-Identifier: Unlicense
pragma solidity 0.8.17;

import "../TestBaseForwardWithCustomLogic.sol";

contract AmarokTest is TestBaseForwardWithCustomLogic {
    function setUp() public override {
        // Calldata from https://li.quest/v1/quote
        //               ?fromChain=ETH
        //               &fromAmount=10000000
        //               &fromToken=USDT
        //               &toChain=POL
        //               &toToken=DAI
        //               &slippage=0.03
        //               &allowBridges=amarok
        //               &fromAddress=0xf0ad40Df0AD40DF0Ad40DF0Ad40df0Ad40df0Ad4
        DATA_WITH_NON_NATIVE_ASSET = hex"123cc1170000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000004c05514579ae0fcfee22e1495b2df1631f49d324770b235cb7970836466e5c12ed8000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000f0ad40df0ad40df0ad40df0ad40df0ad40df0ad400000000000000000000000000000000000000000000000000000000009695540000000000000000000000000000000000000000000000000000000000000089000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000006616d61726f6b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000086c6966692d61706900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000d9e1ce17f2641f24ae83637ab66a2cca9c378b9f000000000000000000000000d9e1ce17f2641f24ae83637ab66a2cca9c378b9f000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000014438ed17390000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000096955400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000000000000000000000000000000000000646cc7710000000000000000000000000000000000000000000000000000000000000004000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000006b3595068778dd592e39a122f4f5a5cf09c90fe2000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000074674dafd6f4495e7f63f7637e94b8b89b2f01db00000000000000000000000000000000000000000000000000007d3235a403c4000000000000000000000000000000000000000000000000000000000000012c000000000000000000000000f0ad40df0ad40df0ad40df0ad40df0ad40df0ad400000000000000000000000000000000000000000000000000000000706f6c7900000000000000000000000000000000000000000000000000000000000003a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000f0ad40df0ad40df0ad40df0ad40df0ad40df0ad4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000001111111254eeb25477b68fb85ed929f73a9605820000000000000000000000001111111254eeb25477b68fb85ed929f73a9605820000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a063000000000000000000000000000000000000000000000000000000000091c37300000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000020812aa3caf000000000000000000000000b97cd69145e5a9357b2acd6af6c5076380f17afb0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000007432fde7aefc64f42c87e1be943024368cf68ecd000000000000000000000000dd1305150d27aecc60c066630105db419977e367000000000000000000000000000000000000000000000000000000000091c3730000000000000000000000000000000000000000000000008092312f66e198bd0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006d00000000000000000000000000000000000000000000000000000000004f00a0c028b46d067432fde7aefc64f42c87e1be943024368cf68ecd0000000000000000000000000000000000000000000000008092312f66e198bd1111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000002e9b3012000000000000000000000000000000000000000000000000";

        super.setUp();
    }

    function test_forwardWithCustomLogic_success_withNonNativeAsset()
        public
        override
    {
        AmarokData memory amarokData = forwardContract.extractAmarokData(
            DATA_WITH_NON_NATIVE_ASSET
        );

        _forwardWithCustomLogic(false, amarokData.relayerFee);
    }

    function test_forwardWithCustomLogic_fail_withNativeAsset_whenMsgValueIsLow()
        public
        override
    {
        // This bridge doesn't support native asset.
    }

    function test_forwardWithCustomLogic_success_withNativeAsset()
        public
        override
    {
        // This bridge doesn't support native asset.
    }
}
